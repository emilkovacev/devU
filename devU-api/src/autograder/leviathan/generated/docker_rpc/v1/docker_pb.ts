// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file docker_rpc/v1/docker.proto (package docker_rpc.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { FileUpload } from "../../types/v1/types_pb";
import { file_types_v1_types } from "../../types/v1/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file docker_rpc/v1/docker.proto.
 */
export const file_docker_rpc_v1_docker: GenFile = /*@__PURE__*/
  fileDesc("Chpkb2NrZXJfcnBjL3YxL2RvY2tlci5wcm90bxINZG9ja2VyX3JwYy52MSIrChVTdGFydENvbnRhaW5lclJlcXVlc3QSEgoKY29tYmluZWRJZBgBIAEoCSIYChZTdGFydENvbnRhaW5lclJlc3BvbnNlIioKFFN0b3BDb250YWluZXJSZXF1ZXN0EhIKCmNvbWJpbmVkSWQYASABKAkiFwoVU3RvcENvbnRhaW5lclJlc3BvbnNlIiwKFkdldENvbnRhaW5lckxvZ1JlcXVlc3QSEgoKY29tYmluZWRJZBgBIAEoCSInChdHZXRDb250YWluZXJMb2dSZXNwb25zZRIMCgRsb2dzGAEgASgJIj0KFkNyZWF0ZUNvbnRhaW5lclJlcXVlc3QSEAoIaW1hZ2VUYWcYASABKAkSEQoJbWFjaGluZUlEGAIgASgJIi4KF0NyZWF0ZUNvbnRhaW5lclJlc3BvbnNlEhMKC2NvbnRhaW5lcklkGAEgASgJIi0KFkRlbGV0ZUNvbnRhaW5lclJlcXVlc3QSEwoLY29udGFpbmVySWQYASABKAkiGQoXRGVsZXRlQ29udGFpbmVyUmVzcG9uc2UiFwoVTGlzdENvbnRhaW5lcnNSZXF1ZXN0IkwKFkxpc3RDb250YWluZXJzUmVzcG9uc2USMgoKY29udGFpbmVycxgBIAMoCzIeLmRvY2tlcl9ycGMudjEuRG9ja2VyQ29udGFpbmVyIhIKEE5ld0ltYWdlUmVzcG9uc2UiRwoPTmV3SW1hZ2VSZXF1ZXN0EhAKCGltYWdlVGFnGAEgASgJEiIKBGZpbGUYAiABKAsyFC50eXBlcy52MS5GaWxlVXBsb2FkIj8KEUxpc3RJbWFnZVJlc3BvbnNlEioKBmltYWdlcxgBIAMoCzIaLmRvY2tlcl9ycGMudjEuRG9ja2VySW1hZ2UiEgoQTGlzdEltYWdlUmVxdWVzdCJRCg9Eb2NrZXJDb250YWluZXISCgoCaWQYASABKAkSMgoIbWV0YWRhdGEYAiADKAsyIC5kb2NrZXJfcnBjLnYxLkNvbnRhaW5lck1ldGFEYXRhImUKEUNvbnRhaW5lck1ldGFEYXRhEgoKAklkGAEgASgJEhYKDkNvbnRhaW5lck5hbWVzGAIgAygJEg0KBUltYWdlGAQgASgJEg4KBlN0YXR1cxgDIAEoCRINCgVTdGF0ZRgGIAEoCSJJCgtEb2NrZXJJbWFnZRIKCgJpZBgBIAEoCRIuCghtZXRhZGF0YRgCIAMoCzIcLmRvY2tlcl9ycGMudjEuSW1hZ2VNZXRhRGF0YSJOCg1JbWFnZU1ldGFEYXRhEgoKAklkGAEgASgJEhAKCFJlcG9UYWdzGAIgAygJEgwKBFNpemUYAyABKAMSEQoJQ3JlYXRlZEF0GAQgASgDMoYGCg1Eb2NrZXJTZXJ2aWNlEmIKD0NyZWF0ZUNvbnRhaW5lchIlLmRvY2tlcl9ycGMudjEuQ3JlYXRlQ29udGFpbmVyUmVxdWVzdBomLmRvY2tlcl9ycGMudjEuQ3JlYXRlQ29udGFpbmVyUmVzcG9uc2UiABJiCg9EZWxldGVDb250YWluZXISJS5kb2NrZXJfcnBjLnYxLkRlbGV0ZUNvbnRhaW5lclJlcXVlc3QaJi5kb2NrZXJfcnBjLnYxLkRlbGV0ZUNvbnRhaW5lclJlc3BvbnNlIgASXwoOTGlzdENvbnRhaW5lcnMSJC5kb2NrZXJfcnBjLnYxLkxpc3RDb250YWluZXJzUmVxdWVzdBolLmRvY2tlcl9ycGMudjEuTGlzdENvbnRhaW5lcnNSZXNwb25zZSIAEl8KDlN0YXJ0Q29udGFpbmVyEiQuZG9ja2VyX3JwYy52MS5TdGFydENvbnRhaW5lclJlcXVlc3QaJS5kb2NrZXJfcnBjLnYxLlN0YXJ0Q29udGFpbmVyUmVzcG9uc2UiABJcCg1TdG9wQ29udGFpbmVyEiMuZG9ja2VyX3JwYy52MS5TdG9wQ29udGFpbmVyUmVxdWVzdBokLmRvY2tlcl9ycGMudjEuU3RvcENvbnRhaW5lclJlc3BvbnNlIgASZQoQR2V0Q29udGFpbmVyTG9ncxIlLmRvY2tlcl9ycGMudjEuR2V0Q29udGFpbmVyTG9nUmVxdWVzdBomLmRvY2tlcl9ycGMudjEuR2V0Q29udGFpbmVyTG9nUmVzcG9uc2UiADABElMKDkNyZWF0ZU5ld0ltYWdlEh4uZG9ja2VyX3JwYy52MS5OZXdJbWFnZVJlcXVlc3QaHy5kb2NrZXJfcnBjLnYxLk5ld0ltYWdlUmVzcG9uc2UiABJRCgpMaXN0SW1hZ2VzEh8uZG9ja2VyX3JwYy52MS5MaXN0SW1hZ2VSZXF1ZXN0GiAuZG9ja2VyX3JwYy52MS5MaXN0SW1hZ2VSZXNwb25zZSIAQq4BChFjb20uZG9ja2VyX3JwYy52MUILRG9ja2VyUHJvdG9QAVo7Z2l0aHViLmNvbS9tYWtlb3BlbnNvdXJjZS9sZXZpYXRoYW4vZ2VuZXJhdGVkL2RvY2tlcl9ycGMvdjGiAgNEWFiqAgxEb2NrZXJScGMuVjHKAgxEb2NrZXJScGNcVjHiAhhEb2NrZXJScGNcVjFcR1BCTWV0YWRhdGHqAg1Eb2NrZXJScGM6OlYxYgZwcm90bzM", [file_types_v1_types]);

/**
 * @generated from message docker_rpc.v1.StartContainerRequest
 */
export type StartContainerRequest = Message<"docker_rpc.v1.StartContainerRequest"> & {
  /**
   * @generated from field: string combinedId = 1;
   */
  combinedId: string;
};

/**
 * Describes the message docker_rpc.v1.StartContainerRequest.
 * Use `create(StartContainerRequestSchema)` to create a new message.
 */
export const StartContainerRequestSchema: GenMessage<StartContainerRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 0);

/**
 * @generated from message docker_rpc.v1.StartContainerResponse
 */
export type StartContainerResponse = Message<"docker_rpc.v1.StartContainerResponse"> & {
};

/**
 * Describes the message docker_rpc.v1.StartContainerResponse.
 * Use `create(StartContainerResponseSchema)` to create a new message.
 */
export const StartContainerResponseSchema: GenMessage<StartContainerResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 1);

/**
 * @generated from message docker_rpc.v1.StopContainerRequest
 */
export type StopContainerRequest = Message<"docker_rpc.v1.StopContainerRequest"> & {
  /**
   * @generated from field: string combinedId = 1;
   */
  combinedId: string;
};

/**
 * Describes the message docker_rpc.v1.StopContainerRequest.
 * Use `create(StopContainerRequestSchema)` to create a new message.
 */
export const StopContainerRequestSchema: GenMessage<StopContainerRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 2);

/**
 * @generated from message docker_rpc.v1.StopContainerResponse
 */
export type StopContainerResponse = Message<"docker_rpc.v1.StopContainerResponse"> & {
};

/**
 * Describes the message docker_rpc.v1.StopContainerResponse.
 * Use `create(StopContainerResponseSchema)` to create a new message.
 */
export const StopContainerResponseSchema: GenMessage<StopContainerResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 3);

/**
 * @generated from message docker_rpc.v1.GetContainerLogRequest
 */
export type GetContainerLogRequest = Message<"docker_rpc.v1.GetContainerLogRequest"> & {
  /**
   * @generated from field: string combinedId = 1;
   */
  combinedId: string;
};

/**
 * Describes the message docker_rpc.v1.GetContainerLogRequest.
 * Use `create(GetContainerLogRequestSchema)` to create a new message.
 */
export const GetContainerLogRequestSchema: GenMessage<GetContainerLogRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 4);

/**
 * @generated from message docker_rpc.v1.GetContainerLogResponse
 */
export type GetContainerLogResponse = Message<"docker_rpc.v1.GetContainerLogResponse"> & {
  /**
   * @generated from field: string logs = 1;
   */
  logs: string;
};

/**
 * Describes the message docker_rpc.v1.GetContainerLogResponse.
 * Use `create(GetContainerLogResponseSchema)` to create a new message.
 */
export const GetContainerLogResponseSchema: GenMessage<GetContainerLogResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 5);

/**
 * @generated from message docker_rpc.v1.CreateContainerRequest
 */
export type CreateContainerRequest = Message<"docker_rpc.v1.CreateContainerRequest"> & {
  /**
   * @generated from field: string imageTag = 1;
   */
  imageTag: string;

  /**
   * @generated from field: string machineID = 2;
   */
  machineID: string;
};

/**
 * Describes the message docker_rpc.v1.CreateContainerRequest.
 * Use `create(CreateContainerRequestSchema)` to create a new message.
 */
export const CreateContainerRequestSchema: GenMessage<CreateContainerRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 6);

/**
 * @generated from message docker_rpc.v1.CreateContainerResponse
 */
export type CreateContainerResponse = Message<"docker_rpc.v1.CreateContainerResponse"> & {
  /**
   * @generated from field: string containerId = 1;
   */
  containerId: string;
};

/**
 * Describes the message docker_rpc.v1.CreateContainerResponse.
 * Use `create(CreateContainerResponseSchema)` to create a new message.
 */
export const CreateContainerResponseSchema: GenMessage<CreateContainerResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 7);

/**
 * @generated from message docker_rpc.v1.DeleteContainerRequest
 */
export type DeleteContainerRequest = Message<"docker_rpc.v1.DeleteContainerRequest"> & {
  /**
   * @generated from field: string containerId = 1;
   */
  containerId: string;
};

/**
 * Describes the message docker_rpc.v1.DeleteContainerRequest.
 * Use `create(DeleteContainerRequestSchema)` to create a new message.
 */
export const DeleteContainerRequestSchema: GenMessage<DeleteContainerRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 8);

/**
 * @generated from message docker_rpc.v1.DeleteContainerResponse
 */
export type DeleteContainerResponse = Message<"docker_rpc.v1.DeleteContainerResponse"> & {
};

/**
 * Describes the message docker_rpc.v1.DeleteContainerResponse.
 * Use `create(DeleteContainerResponseSchema)` to create a new message.
 */
export const DeleteContainerResponseSchema: GenMessage<DeleteContainerResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 9);

/**
 * @generated from message docker_rpc.v1.ListContainersRequest
 */
export type ListContainersRequest = Message<"docker_rpc.v1.ListContainersRequest"> & {
};

/**
 * Describes the message docker_rpc.v1.ListContainersRequest.
 * Use `create(ListContainersRequestSchema)` to create a new message.
 */
export const ListContainersRequestSchema: GenMessage<ListContainersRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 10);

/**
 * @generated from message docker_rpc.v1.ListContainersResponse
 */
export type ListContainersResponse = Message<"docker_rpc.v1.ListContainersResponse"> & {
  /**
   * @generated from field: repeated docker_rpc.v1.DockerContainer containers = 1;
   */
  containers: DockerContainer[];
};

/**
 * Describes the message docker_rpc.v1.ListContainersResponse.
 * Use `create(ListContainersResponseSchema)` to create a new message.
 */
export const ListContainersResponseSchema: GenMessage<ListContainersResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 11);

/**
 * @generated from message docker_rpc.v1.NewImageResponse
 */
export type NewImageResponse = Message<"docker_rpc.v1.NewImageResponse"> & {
};

/**
 * Describes the message docker_rpc.v1.NewImageResponse.
 * Use `create(NewImageResponseSchema)` to create a new message.
 */
export const NewImageResponseSchema: GenMessage<NewImageResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 12);

/**
 * @generated from message docker_rpc.v1.NewImageRequest
 */
export type NewImageRequest = Message<"docker_rpc.v1.NewImageRequest"> & {
  /**
   * @generated from field: string imageTag = 1;
   */
  imageTag: string;

  /**
   * @generated from field: types.v1.FileUpload file = 2;
   */
  file?: FileUpload;
};

/**
 * Describes the message docker_rpc.v1.NewImageRequest.
 * Use `create(NewImageRequestSchema)` to create a new message.
 */
export const NewImageRequestSchema: GenMessage<NewImageRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 13);

/**
 * @generated from message docker_rpc.v1.ListImageResponse
 */
export type ListImageResponse = Message<"docker_rpc.v1.ListImageResponse"> & {
  /**
   * @generated from field: repeated docker_rpc.v1.DockerImage images = 1;
   */
  images: DockerImage[];
};

/**
 * Describes the message docker_rpc.v1.ListImageResponse.
 * Use `create(ListImageResponseSchema)` to create a new message.
 */
export const ListImageResponseSchema: GenMessage<ListImageResponse> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 14);

/**
 * @generated from message docker_rpc.v1.ListImageRequest
 */
export type ListImageRequest = Message<"docker_rpc.v1.ListImageRequest"> & {
};

/**
 * Describes the message docker_rpc.v1.ListImageRequest.
 * Use `create(ListImageRequestSchema)` to create a new message.
 */
export const ListImageRequestSchema: GenMessage<ListImageRequest> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 15);

/**
 * Contains a machine id and its associated containers
 *
 * @generated from message docker_rpc.v1.DockerContainer
 */
export type DockerContainer = Message<"docker_rpc.v1.DockerContainer"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated docker_rpc.v1.ContainerMetaData metadata = 2;
   */
  metadata: ContainerMetaData[];
};

/**
 * Describes the message docker_rpc.v1.DockerContainer.
 * Use `create(DockerContainerSchema)` to create a new message.
 */
export const DockerContainerSchema: GenMessage<DockerContainer> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 16);

/**
 * @generated from message docker_rpc.v1.ContainerMetaData
 */
export type ContainerMetaData = Message<"docker_rpc.v1.ContainerMetaData"> & {
  /**
   * @generated from field: string Id = 1;
   */
  Id: string;

  /**
   * @generated from field: repeated string ContainerNames = 2;
   */
  ContainerNames: string[];

  /**
   * @generated from field: string Image = 4;
   */
  Image: string;

  /**
   * @generated from field: string Status = 3;
   */
  Status: string;

  /**
   * @generated from field: string State = 6;
   */
  State: string;
};

/**
 * Describes the message docker_rpc.v1.ContainerMetaData.
 * Use `create(ContainerMetaDataSchema)` to create a new message.
 */
export const ContainerMetaDataSchema: GenMessage<ContainerMetaData> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 17);

/**
 * Contains a machine id and its associated images
 *
 * @generated from message docker_rpc.v1.DockerImage
 */
export type DockerImage = Message<"docker_rpc.v1.DockerImage"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated docker_rpc.v1.ImageMetaData metadata = 2;
   */
  metadata: ImageMetaData[];
};

/**
 * Describes the message docker_rpc.v1.DockerImage.
 * Use `create(DockerImageSchema)` to create a new message.
 */
export const DockerImageSchema: GenMessage<DockerImage> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 18);

/**
 * @generated from message docker_rpc.v1.ImageMetaData
 */
export type ImageMetaData = Message<"docker_rpc.v1.ImageMetaData"> & {
  /**
   * @generated from field: string Id = 1;
   */
  Id: string;

  /**
   * @generated from field: repeated string RepoTags = 2;
   */
  RepoTags: string[];

  /**
   * @generated from field: int64 Size = 3;
   */
  Size: bigint;

  /**
   * @generated from field: int64 CreatedAt = 4;
   */
  CreatedAt: bigint;
};

/**
 * Describes the message docker_rpc.v1.ImageMetaData.
 * Use `create(ImageMetaDataSchema)` to create a new message.
 */
export const ImageMetaDataSchema: GenMessage<ImageMetaData> = /*@__PURE__*/
  messageDesc(file_docker_rpc_v1_docker, 19);

/**
 * @generated from service docker_rpc.v1.DockerService
 */
export const DockerService: GenService<{
  /**
   * @generated from rpc docker_rpc.v1.DockerService.CreateContainer
   */
  createContainer: {
    methodKind: "unary";
    input: typeof CreateContainerRequestSchema;
    output: typeof CreateContainerResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.DeleteContainer
   */
  deleteContainer: {
    methodKind: "unary";
    input: typeof DeleteContainerRequestSchema;
    output: typeof DeleteContainerResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.ListContainers
   */
  listContainers: {
    methodKind: "unary";
    input: typeof ListContainersRequestSchema;
    output: typeof ListContainersResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.StartContainer
   */
  startContainer: {
    methodKind: "unary";
    input: typeof StartContainerRequestSchema;
    output: typeof StartContainerResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.StopContainer
   */
  stopContainer: {
    methodKind: "unary";
    input: typeof StopContainerRequestSchema;
    output: typeof StopContainerResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.GetContainerLogs
   */
  getContainerLogs: {
    methodKind: "server_streaming";
    input: typeof GetContainerLogRequestSchema;
    output: typeof GetContainerLogResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.CreateNewImage
   */
  createNewImage: {
    methodKind: "unary";
    input: typeof NewImageRequestSchema;
    output: typeof NewImageResponseSchema;
  },
  /**
   * @generated from rpc docker_rpc.v1.DockerService.ListImages
   */
  listImages: {
    methodKind: "unary";
    input: typeof ListImageRequestSchema;
    output: typeof ListImageResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_docker_rpc_v1_docker, 0);

